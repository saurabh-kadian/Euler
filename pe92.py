Python 3.3.2 (v3.3.2:d047928ae3f6, May 16 2013, 00:06:53) [MSC v.1600 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> def add(x):
	temp = str(x)
	total = 0
	for i in range(1,len(temp)):
		total = int(temp[i])**2
	return total

>>> add(44)
16
>>> def add(x):
	temp = str(x)
	total = 0
	for i in range(0,len(temp)):
		total = int(temp[i])**2
	return total

>>> add(44)
16
>>> def add(x):
	temp = str(x)
	total = 0
	for i in range(0,len(temp)):
		total += int(temp[i])**2
	return total

>>> add(44)
32
>>> def f():
	total = 0
	for i in range(2,10000000):
		nextNum = i
		while True:
			if nextNum == 1:
				break
			if nextNum == 89:
				total += 1
				break
			nextNum = add(nextNum)
	print(total)

	
>>> f()
Traceback (most recent call last):
  File "<pyshell#24>", line 1, in <module>
    f()
  File "<pyshell#23>", line 11, in f
    nextNum = add(nextNum)
  File "<pyshell#11>", line 5, in add
    total += int(temp[i])**2
KeyboardInterrupt
>>> def f():
	total = 0
	for i in range(2,10000000):
		nextNum = i
		while True:
			if nextNum == 1:
				break
			if nextNum == 89:
				print(i)
				total += 1
				break
			nextNum = add(nextNum)
	print(total)

	
>>> f()
2
3
4
5
6
8
9
11
12
14
15
16
17
18
20
21
22
24
25
26
27
29
30
33
34
35
36
37
38
39
40
41
42
43
45
46
47
48
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
69
71
72
73
74
75
76
77
78
80
81
83
84
85
87
88
89
90
92
93
95
96
98
99
101
102
104
105
106
107
108
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
131
132
134
135
136
137
138
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
168
169
170
171
172
173
174
175
177
178
179
180
181
182
183
184
185
186
187
189
191
194
195
196
197
198
199
200
201
202
204
205
206
207
209
210
211
212
213
214
215
216
217
218
220
221
222
223
224
225
227
228
229
231
232
233
234
235
237
238
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
281
282
283
284
285
286
287
288
289
290
292
294
295
296
297
298
299
300
303
304
305
306
307
308
309
311
312
314
315
316
317
318
321
322
323
324
325
327
328
330
332
333
334
335
336
337
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
357
358
359
360
361
363
364
366
369
370
371
372
373
374
375
377
378
380
381
382
384
385
387
388
389
390
393
394
395
396
398
399
400
401
402
403
405
406
407
408
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
441
442
443
444
445
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
465
466
467
468
470
471
472
473
474
475
476
477
479
480
481
482
483
484
485
486
488
489
491
492
493
494
495
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
557
558
559
560
561
562
564
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
609
610
611
612
613
614
615
616
618
619
620
621
624
625
626
627
628
629
630
631
633
634
636
639
640
641
642
643
645
646
647
648
650
651
652
654
657
658
659
660
661
662
663
664
666
667
668
669
670
672
674
675
676
677
678
679
681
682
684
685
686
687
688
689
690
691
692
693
695
696
697
698
699
701
702
703
704
705
706
707
708
710
711
712
713
714
715
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
737
738
740
741
742
743
744
745
746
747
749
750
751
752
753
754
755
756
757
758
759
760
762
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
785
786
787
788
789
791
792
794
795
796
797
798
799
800
801
803
804
805
807
808
809
810
811
812
813
814
815
816
817
819
821
822
823
824
825
826
827
828
829
830
831
832
834
835
837
838
839
840
841
842
843
844
845
846
848
849
850
851
852
853
854
855
856
857
858
859
861
862
864
865
866
867
868
869
870
871
872
873
875
876
877
878
879
880
882
883
884
885
886
887
889
890
891
892
893
894
895
896
897
898
900
902
903
905
906
908
909
911
914
915
916
917
918
919
920
922
924
925
926
927
928
929
930
933
934
935
936
938
939
941
942
943
944
945
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
965
966
967
968
969
971
972
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
990
991
992
993
994
995
996
997
999
1001
1002
1004
1005
1006
1007
1008
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1031
1032
1034
1035
1036
1037
1038
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1068
1069
1070
1071
1072
1073
1074
1075
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1089
1091
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1113
1116
1117
1118
1119
1120
1123
1124
1126
1127
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1142
1143
1144
1145
1146
1147
1149
1150
1153
1154
1155
1156
1157
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1178
1179
1180
1181
1183
1186
1187
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1210
1213
1214
1216
1217
1219
1220
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1248
1249
1250
1252
1253
1254
1255
1256
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1276
1278
1279
1280
1282
1283
1284
1286
1287
1289
1291
1292
1293
1294
1295
1296
1297
1298
1301
1302
1304
1305
1306
1307
1308
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1324
1325
1326
1327
1328
1329
1331
1334
1336
1338
1340
1341
1342
1343
1344
1345
1346
Traceback (most recent call last):
  File "<pyshell#27>", line 1, in <module>
    f()
  File "<pyshell#26>", line 9, in f
    print(i)
  File "E:\Saurabh\Python 3.3.2(64 bit)\lib\idlelib\PyShell.py", line 1318, in write
    return self.shell.write(s, self.tags)
KeyboardInterrupt
>>> def f():
	total = 0
	for i in range(2,10000000):
		nextNum = i
		while True:
			if nextNum == 1:
				break
			if nextNum == 89:
				total += 1
				break
			nextNum = add(nextNum)
	print(total)

	
>>> f()
8581146
>>> 
